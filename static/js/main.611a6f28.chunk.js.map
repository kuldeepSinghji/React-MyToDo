{"version":3,"sources":["components/DeleteAll.js","components/TodoItems.js","components/Todo.js","components/Message.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteAll","props","className","onClick","deleteAll","TodoItems","id","Items","editItems","onSelect","Todo","type","value","inputList","placeholder","onChange","event","setInputList","target","togglebutton","listOfItems","style","cursor","items","length","map","itemIndex","deleteItems","console","log","updateItem","find","currItem","index","setIsEdititem","setTogglebutton","Message","messageType","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","message","Footer","App","useState","list","localStorage","getItem","JSON","parse","localdata","setItems","setMessage","isEdititem","setMessageType","useEffect","setItem","stringify","setTimeout","element","oldItems","filter","arrElement","window","confirm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.611a6f28.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./DeleteAll.css\"\r\nexport default function DeleteAll(props) {\r\n    \r\n    return (\r\n            <div className=\"deleteAll\" >\r\n            <button onClick={props.deleteAll}>Delete All</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./TodoItems.css\"\r\nexport default function TodoItems(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"items\">\r\n                <li>{props.id + 1}. {props.Items}</li>\r\n                <div className=\"buttonBox\">\r\n                    <button onClick={props.editItems}>🖊</button>\r\n                    <button className=\"cross\" onClick={() => { props.onSelect(props.id) }} >X</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TodoItems from './TodoItems';\r\nimport \"./Todo.css\"\r\nexport default function Todo(props) {\r\n    const editItems = (itemIndex) => {\r\n        console.log(\"clicked\", itemIndex)\r\n        const updateItem = props.items.find((currItem, index) => {\r\n            return index === itemIndex;\r\n        })\r\n        props.setInputList(updateItem)\r\n        props.setIsEdititem(itemIndex)\r\n        props.setTogglebutton(true)\r\n    }\r\n    const itemEvent = (event) => {\r\n        props.setInputList(event.target.value)\r\n      }\r\n    return (\r\n        <>\r\n            <div className=\"todo\">\r\n                <div className=\"heading\">\r\n                    <h1>My Todo List</h1>\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" value={props.inputList} placeholder=\"✍  Add a item\" onChange={itemEvent} />\r\n                    <div className=\"addItemBox\">\r\n                        {props.togglebutton ? <button onClick={props.listOfItems} style={{ cursor: \"pointer\" }}>🖊</button> : <button onClick={props.listOfItems}>+</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"showItemBox\">\r\n                    {props.items.length === 0?\"Nothing to show..\":props.items.map((items, itemIndex) => {\r\n                        return <TodoItems Items={items} key={itemIndex} id={itemIndex} onSelect={props.deleteItems} editItems={() => editItems(itemIndex)} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Message.css\"\r\nexport default function Message(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <>\r\n        <div className={`messageBox ${props.messageType}`}>\r\n        <p id=\"para\">{props.messageType} {capitalize(props.message)}</p>\r\n        </div>     \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Footer.css\"\r\nexport default function Footer() {\r\n    return (\r\n        <>\r\n        <footer>\r\n            <p>kuldeepSingh ©ToDoApp2027.All right reserved.</p>\r\n        </footer>   \r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState, useEffect } from \"react\"\nimport DeleteAll from './components/DeleteAll';\nimport Todo from './components/Todo';\nimport Message from './components/Message';\nimport Footer from './components/Footer';\nfunction App() {\n  const localdata = () => {\n    const list = localStorage.getItem(\"Todo\")\n    if (list) {\n      return JSON.parse(list)\n    } else {\n      return [];\n    }\n  }\n  const [inputList, setInputList] = useState(\"\")\n  const [items, setItems] = useState(localdata())\n  const [message, setMessage] = useState(\"\")\n  const [togglebutton, setTogglebutton] = useState(false)\n  const [isEdititem, setIsEdititem] = useState(\"\");   \n  const [messageType, setMessageType] = useState(\"\")\n  const listOfItems = () => {\n    if (!inputList) {\n      setMessage(\"Please fill the Input Firstly..\")\n      setMessageType(\"Error\")\n    }else if(inputList && togglebutton){\n      setItems(\n        items.map((element,index)=>{\n          if(index === isEdititem){\n            setMessage(\"Item has been Successfully Updated..\")\n            setMessageType(\"Success\")\n            return inputList;\n          }else{\n            return element;\n          }\n        })\n      )\n      setInputList(\"\")\n      setTogglebutton(false)\n    }\n    else {\n      setItems((oldItems) => {\n        setMessageType(\"Success\")\n        setMessage(\"Item has been Successfully Inserted\")\n        return [...oldItems, inputList]\n      })\n      setInputList(\"\")\n    }\n  }\n  const deleteItems = (id) => {\n    setItems((oldItems) => {\n      return oldItems.filter((arrElement, index) => {\n        setMessage(arrElement + \"item has been deleted Sucessfully..\")\n        setMessageType(\"Success\")\n        return index !== id\n      })\n    })\n  }\n  useEffect(() => {\n    localStorage.setItem(\"Todo\", JSON.stringify(items))\n  }, [items])\n  const deleteAll = () => {\n    let c =window.confirm(\"Are you sure to want to delete all the files\");\n    if(c === true){\n    setItems([])\n    setMessage(\"All Items  have been deleteted sucessfully...\")\n    setMessageType(\"Success\")\n    }\n  }\n  setTimeout(() => {\n    setMessage(\"\")\n    setMessageType(\"\")\n  }, 2000);\n  return (\n    <>\n      <Message messageType={messageType} message={message}/>\n      <div className=\"appContainer\">\n        <Todo inputList={inputList} setInputList={setInputList}  listOfItems={listOfItems} togglebutton={togglebutton} setTogglebutton={setTogglebutton} items={items} setIsEdititem={setIsEdititem} deleteItems={deleteItems}/>\n        <DeleteAll deleteAll={deleteAll} />\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}